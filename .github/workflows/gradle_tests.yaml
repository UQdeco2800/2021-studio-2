name: Game Unit Tests

on: [push, pull_request] # Will trigger whenever a push is made to the branch, regardless of which branch

jobs:
  run_unit_tests:
    runs-on: ubuntu-latest # Running on this OS, if we need it changed lmk
    steps:
      - uses: actions/checkout@v2 # Checkout repo to remote machine
      - name: Set up OpenJDK13 
        uses: actions/setup-java@v1
        with:
          java-version: '13'
      
      - name: Slice commit message # Grab first 15 characters so we don't overflow discord; can't do this in the embed
        if: github.ref == 'refs/heads/main'
        run: |
          echo "COMMIT_MSG=${{ github.event.head_commit.message }}" | head -c 15 >> $GITHUB_ENV

      - name: Set Actions URL # We don't have a better way of grabbing this due to the discord settings not being executed in the bash env
        run: |
          echo "ACTIONS_URL=https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" >> $GITHUB_ENV

      - name: Cache Gradle packages # Allows us to reuse packages between runs
        uses: actions/cache@v2 # If the files specified in key change we dump old cache else re-use
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper 
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }} 
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Run Unit Tests
        id: tests # Unique ID to reference later to color our message
        run: |
          cd $GRADLE_DIR
          chmod +x ./gradlew
          ./gradlew --stacktrace test
        env:
          GRADLE_DIR: 'source' # Modify this to wherever './gradlew' is 

      - name: Set test output for success # Both of these numbers are int codes for red and green respectively; the Discord API uses these for some reason
        if: always() && steps.tests.conclusion == 'success'
        run: |
          echo "TEST_OUTCOME=3066993" >> $GITHUB_ENV

      - name: Set test output for failure
        if: always() && steps.tests.conclusion != 'success'
        run: |
          echo "TEST_OUTCOME=15158332" >> $GITHUB_ENV

      - name: Discord notification
        if: always() && github.ref == 'refs/heads/main' # Always run when on main
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          DISCORD_EMBEDS: '[{
                              "title": "Build Information",
                              "description": "Commit message: ```${{ env.COMMIT_MSG }}...```",
                              "color": "${{ env.TEST_OUTCOME }}",
                              "url": "${{ env.ACTIONS_URL }}"
                            }]'
        uses: Ilshidur/action-discord@master
        with:
          args: 'Unit Tests reported **${{ steps.tests.conclusion }}**!'

      - name: Cleanup Gradle Cache
        if: always()
        # Remove some files from the Gradle cache, so they aren't cached by GitHub Actions.
        # Restoring these files from a GitHub Actions cache might cause problems for future builds.
        run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties